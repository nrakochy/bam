<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1475014445923">{:repl-history {:ide [], :local [&quot;(select-keys {:a 1 :b 2})&quot; &quot;(source select-keys)&quot; &quot;(keys {:a 1 :b 2})&quot; &quot;(use '[bam.db.schema] :reload-all)&quot; &quot;(build-datomic-schema \&quot;user\&quot; (:user data-schema))&quot; &quot;(build-entity-schema \&quot;user\&quot; (:user data-schema))&quot; &quot;(use '[bam.db.schema :as scheming] :reload-all)&quot; &quot;(datomic-schema-attribute {:ent \&quot;user\&quot; :ident \&quot;username\&quot; :type \&quot;string\&quot; :cardinality \&quot;one\&quot;})&quot; &quot;(def test11{:ent \&quot;user\&quot; :ident \&quot;username\&quot; :type \&quot;string\&quot; :cardinality \&quot;one\&quot;})&quot; &quot;test11&quot; &quot;(data-schema)&quot; &quot;(def test1{:ent \&quot;user\&quot; :ident \&quot;username\&quot; :type \&quot;string\&quot; :cardinality \&quot;one\&quot;})&quot; &quot;(build-datomic-schema :user)&quot; &quot;(class (build-datomic-schema [] :user) )&quot; &quot;(build-datomic-schema [] :user)&quot; &quot;(t)&quot; &quot;(def test2 (build-datomic-schema [] :user))&quot; &quot;(build-datomic-schema test2 :org)&quot; &quot;(tester)&quot; &quot;(data-references)&quot; &quot;data-references&quot; &quot;data-schema&quot; &quot;tester&quot; &quot;datomic-schema&quot; &quot;(source filterv)&quot; &quot;(def test1 {:a 1 :b 2})&quot; &quot;(filterv #(= :ref (:type test1)))&quot; &quot;(filterv #(= :ref (:type %)) test1)&quot; &quot;test1&quot; &quot;(def test2 [{:type \&quot;nothing\&quot; :a 1} {:type :ref :b 2}])&quot; &quot;(filterv #(= :ref (:type %)) test2)&quot; &quot; (:b (filterv #(= :ref (:type %)) test2) )&quot; &quot;test2&quot; &quot;(use '[bam.db.datomic-adapter :as adapter] :reload-all)&quot; &quot;(extract-references test3)&quot; &quot;(def test3 [{:type \&quot;nothing\&quot; :name \&quot;Superior\&quot;} {:type :ref :name \&quot;Check\&quot;}])&quot; &quot;(get-reference-types test3)&quot; &quot;(get-reference-types (:user data-entities))&quot; &quot;(get-reference-types [ (:user data-entities) ])&quot; &quot;(get-reference-types [ (:user data-schema) ])&quot; &quot;(get-reference-types (:user data-schema))&quot; &quot;data-entities&quot; &quot;(extract-references)&quot; &quot;(use '[bam.db.schema :as sch] :reload-all)&quot;], :remote []}}</component>
</project>